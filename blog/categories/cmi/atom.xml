<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: cmi | Zarrar's Journaling]]></title>
  <link href="http://czarrar.github.io/blog/categories/cmi/atom.xml" rel="self"/>
  <link href="http://czarrar.github.io/"/>
  <updated>2013-12-06T11:17:24-05:00</updated>
  <id>http://czarrar.github.io/</id>
  <author>
    <name><![CDATA[Zarrar Shehzad]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Week 49 - Friday]]></title>
    <link href="http://czarrar.github.io/blog/2013/12/06/week-49-friday/"/>
    <updated>2013-12-06T10:35:00-05:00</updated>
    <id>http://czarrar.github.io/blog/2013/12/06/week-49-friday</id>
    <content type="html"><![CDATA[<h2 id="plan">Plan</h2>

<ul>
  <li>ABIDE
    <ul>
      <li>[] QC (1 hour)</li>
    </ul>
  </li>
  <li>CPAC
    <ul>
      <li>[] Finish adapting fast eigenvector code (30 mins)</li>
      <li>[] Write SVD version of eigenvector (1 hour)</li>
      <li>[] Test new eigenvector code (2 hours)</li>
      <li>[] @Steve CWAS Regression Test (1 hour)</li>
    </ul>
  </li>
  <li>Tagging
    <ul>
      <li>[] Meeting to discuss criteria (1 hour)</li>
    </ul>
  </li>
</ul>

<h2 id="fast-eigenvector-centrality">Fast Eigenvector Centrality</h2>

<p>The plan for testing would be to first make sure that the code results are close to the original approach and possibly also compare to an SVD approach.</p>

<h2 id="thoughts">Thoughts</h2>

<h3 id="plan-better">Plan Better</h3>

<p>Last few days I feel that I haven’t gotten through as much as I could have. Possibly due to not sleeping as much and partly due to more socializing like with the speaker’s visit and a new office mate. Let’s try differently today.</p>

<h3 id="link-to-pages-by-week-and-month">Link to pages by week and month</h3>

<p>Another nice thing would be to have a summary page at the end of the week with links to all the other pages that week (might want to check if those exist?) and similarly at the end of the month could have a page with the lists for that month. I wonder if this could be within the pages section?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Week 49 - Wednesday]]></title>
    <link href="http://czarrar.github.io/blog/2013/12/04/week-49-wednesday/"/>
    <updated>2013-12-04T10:02:00-05:00</updated>
    <id>http://czarrar.github.io/blog/2013/12/04/week-49-wednesday</id>
    <content type="html"><![CDATA[<h2 id="summarytodo">Summary/TODO</h2>

<ul>
  <li>ABIDE
    <ul>
      <li>[x] QC (1 hour)</li>
    </ul>
  </li>
  <li>CPAC (related to ABIDE)
    <ul>
      <li>[] Functional Density Mapping</li>
      <li>[] Fast Eigenvector Centrality
        <ul>
          <li>[x] Respond to Wink</li>
          <li>[x] Tried installing the C++ version (1 hr)</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>[] Tagging</li>
  <li>Dan Dickstein CWAS
    <ul>
      <li>[x] Get details from Dan</li>
      <li>[x] Phil Meeting about CWAS Paper. Discussed way to get confidence intervals for simulation power analysis. (1 hr)</li>
    </ul>
  </li>
  <li>CWAS with Steve. Worked out a plan to have a workable version of CWAS into the next release (30 min)</li>
  <li>Went to talk with Matt Hutchinson. Asked a super intelligent question. (1-2 hrs)</li>
</ul>

<h2 id="abide-qc">ABIDE QC</h2>

<p>Start at 10am till 11am.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Week 49 - Tuesday]]></title>
    <link href="http://czarrar.github.io/blog/2013/12/03/week-49-tuesday/"/>
    <updated>2013-12-03T11:30:00-05:00</updated>
    <id>http://czarrar.github.io/blog/2013/12/03/week-49-tuesday</id>
    <content type="html"><![CDATA[<p>testing draft</p>

<h2 id="summarytodo">Summary/TODO</h2>

<ul>
  <li>ABIDE
    <ul>
      <li>[x] Create quick pack for degree centrality</li>
      <li>[x] Email Xinian about GSR data and having filtered/non-filtered</li>
      <li>[x] Finish creating quick pack for LFCD</li>
    </ul>
  </li>
  <li>CPAC
    <ul>
      <li>[] Run an initial test of the functional node</li>
    </ul>
  </li>
  <li>Tag</li>
</ul>

<p>I also took the speaker (Matt) out to lunch with Zhen, and then showed him some of my slides about CWAS.</p>

<h2 id="quick-pack-for-centrality">Quick Pack for Centrality</h2>

<h3 id="cpac-preprocessed-data">CPAC Preprocessed Data</h3>

<p>The scripts for this analysis are located in <code>/data/Projects/ABIDE_Initiative/CPAC/abide/config/30_centrality</code>. I was able to first generate a subject list YAML file with <code>10_gen_quick_pack.py</code>. Below is a sample of what a file for one subject looks like:</p>

<p><code>
  functional_brain_mask: {filt_global: /home2/data/Projects/ABIDE_Initiative/CPAC/Output_2013-11-22/pipeline_MerrittIsland/0050642_session_1/functional_brain_mask/_scan_rest_1_rest/rest_3dc_tshift_RPI_3dv_automask.nii.gz,
    filt_noglobal: /home2/data/Projects/ABIDE_Initiative/CPAC/Output_2013-11-22/pipeline_MerrittIsland/0050642_session_1/functional_brain_mask/_scan_rest_1_rest/rest_3dc_tshift_RPI_3dv_automask.nii.gz,
    nofilt_global: /home2/data/Projects/ABIDE_Initiative/CPAC/Output_2013-11-22/pipeline_MerrittIsland/0050642_session_1/functional_brain_mask/_scan_rest_1_rest/rest_3dc_tshift_RPI_3dv_automask.nii.gz,
    nofilt_noglobal: /home2/data/Projects/ABIDE_Initiative/CPAC/Output_2013-11-22/pipeline_MerrittIsland/0050642_session_1/functional_brain_mask/_scan_rest_1_rest/rest_3dc_tshift_RPI_3dv_automask.nii.gz}
</code></p>

<p>We can see that we have each filtering and global option as the input. This is a little bit of cheating since the different input keys are interpreted as different scans.</p>

<p>We can then use these different inputs in one CPAC run with <code>20_run_gen_quick_pack.py</code>. This script is currently running and the output/working directories can be found in <code>/data/Projects/ABIDE_Initiative/Derivatives/CPAC/Cent</code>.</p>

<h2 id="eigenvector-centrality">Eigenvector Centrality</h2>

<p>I emailed out to the author of the fast implementation paper to ask for his C++ code. However, if the author does not respond, the paper is fairly descriptive and I imagine it would be possible to write our own code based on the methods description.</p>

<h2 id="qc">QC</h2>

<p>I created the new excel file and looked through one subject. Should confirm the following: should have columns for anat, func, and reg with comments for each of those, and a final status column and final comments column. Do I need anything for the segmentations?</p>

<h2 id="functional-density-mapping">Functional Density Mapping</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Week 49 - Monday]]></title>
    <link href="http://czarrar.github.io/blog/2013/12/02/week-49-monday/"/>
    <updated>2013-12-02T13:25:00-05:00</updated>
    <id>http://czarrar.github.io/blog/2013/12/02/week-49-monday</id>
    <content type="html"><![CDATA[<h2 id="summary">Summary</h2>

<ul>
  <li>Checked and finalized fixing a subject.</li>
  <li>Resolved questions with QC</li>
  <li>Discussed issue with VMHC</li>
  <li>Setup quick pack for Xinian’s dataset</li>
  <li>Read through the eigenvector centrality paper</li>
  <li>Went through a few articles for tagging with updated instructions</li>
</ul>

<h2 id="todos">TODOs</h2>

<ul>
  <li>ABIDE
    <ul>
      <li>Check on fixed subject</li>
      <li>Email about QC</li>
      <li>Look into VMHC issue on github</li>
      <li>Create quick packs for everyone</li>
      <li>Email to ask about eigenvector centrality</li>
    </ul>
  </li>
  <li>Check fixed subject</li>
  <li>Find out about tagging</li>
</ul>

<h2 id="abide---fixed-subject">ABIDE - Fixed Subject</h2>

<p>I reran one participant with missing derivatives. It appears that everything is good.</p>

<h2 id="abide---quick-packs">ABIDE - Quick Packs</h2>

<p>We are looking to have the following derivatives:</p>

<ul>
  <li>Timeseries for different regions of interest</li>
  <li>Dual Regression maps</li>
  <li>ALFF/fALFF</li>
  <li>REHO</li>
  <li>Degree/Eigen Centrality</li>
  <li>VMHC</li>
</ul>

<h3 id="cameron">Cameron</h3>

<p>For our data, we already have most of the above derivatives and need the following:</p>

<ul>
  <li>Degree/Eigen Centrality</li>
  <li>VMHC</li>
</ul>

<p>Degree I should be able to run now but need to wait on Eigen and VMHC.</p>

<h3 id="xinian">Xinian</h3>

<p>I started to create the quick pack for this dataset. The one issue is that it’s unclear whether the global signal correction was applied to either the filtered or non-filtered data. It should be applied to both so will need to contact some people in order to figure out how to resolve this issue. Hopefully no heads will roll.</p>

<p>The scripts and what not for this dataset quick pack are located in <code>/data/Projects/ABIDE_Initiative/CPAC/abide/config/32_xinian</code>. I still need to write some code to generate the standard brain mask and of course test it all as well.</p>

<h3 id="pierre">Pierre</h3>

<p>Pierre’s is already in standard space so I believe I should simply be able to turn off <code>runRegisterFuncToMNI</code> and also my custom option <code>applyRegisterFuncToMNI</code>. The regular outputs should be good enough.</p>

<h3 id="chao-gan">Chao-Gan</h3>

<p>Check with Chao-Gan.</p>

<h2 id="abide---qc">ABIDE - QC</h2>

<p>I should do a similar approach as Yang and reference an email from Pierre with some guidelines.</p>

<h2 id="eigenvector-centrality">Eigenvector Centrality</h2>

<p>I did a bit of reading last time about a faster approach to eigenvector centrality. Now I went through the main paper again. It appears that their speed-up is primarily by not having to compute the cross product between a matrix of time series (voxels x time points). They split this step up into two parts that reduces the complexity from N^2 to 2NT where N = voxels and T = time points. They make a claim that for voxelwise data, they see a speedup of 1000x.</p>

<h2 id="tagging">Tagging</h2>

<p>Spoke to Cameron. We discussed some potential changes and I emailed these out to him and Matt.</p>

<p>In terms of tagging, here were some important points to note:</p>

<ul>
  <li>use mike’s opinions as the standard</li>
  <li>basic neuroscience is a superset of brain/behavior</li>
  <li>only include resting-state fMRI studies!</li>
</ul>

<h2 id="cwas">CWAS</h2>

<p>I got emails from Xavier and Phil with comments. I should look to integrate them.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wednesday - Week 48]]></title>
    <link href="http://czarrar.github.io/blog/2013/11/27/wednesday-week-48/"/>
    <updated>2013-11-27T11:42:00-05:00</updated>
    <id>http://czarrar.github.io/blog/2013/11/27/wednesday-week-48</id>
    <content type="html"><![CDATA[<h2 id="summary">Summary</h2>

<p>I was able to get through at least at a partial level through the items in my TOOD list below. More details are of course below.</p>

<ul>
  <li>I checked the CPAC output and found that 1 subject had some missing preprocessing data due to a crash during nuisance. I am rerunning this subject on rocky so I can examine the working directory (it said a tissue prior was missing in the error). Everything else is good. It should be noted that there are 2 participants in OHSU that are missing the 1st scan but have 2 other scans.</li>
  <li>I reran the QC and the output pages now seem good. Need to decide the procedure for QC now.</li>
  <li>Looked into eigenvector centrality speedup. There is code to do the power iteration approach that is advocated in the Brain Connectivity paper with 1000x speedup in a fast eigenvector centrality approach. Could also email the people from that paper to ask for their code.</li>
  <li>Discussed updating VMHC to have Cameron’s fixes (register regular MNI brain to symmetric MNI brain) with Steve. Also, discussed having the registration step be done in the assigned standard anatomical resolution and then apply the warp from this registration to the native functional image into the assigned standard functional resolution. This is not currently done.</li>
  <li>Did tagging for about 30 minutes.</li>
  <li>Created TODO items for ABIDE.</li>
</ul>

<h2 id="plans">Plans</h2>

<ul>
  <li>ABIDE
    <ul>
      <li>Create TODOs</li>
      <li>Finish checking CPAC output</li>
      <li>Fix QC pages</li>
      <li>Look into fixing VMHC error when running at 3mm</li>
      <li>Look into eigenvector centrality</li>
      <li>Create quick packs for CPAC and Xinian</li>
    </ul>
  </li>
  <li>Do 1 hour of tagging</li>
</ul>

<h2 id="abide---todo">ABIDE - TODO</h2>

<p>This is a partial list and the next time I will need to make a more thorough list.</p>

<ul>
  <li>Do QC</li>
  <li>Check all outputs there for Pierre, Xinian, Chao-Gan</li>
  <li>Optimize the eigenvector centrality</li>
  <li>Make sure VMHC works properly when using 3mm output resolution</li>
  <li>Setup Quick Packs</li>
  <li>Run Quick Packs</li>
</ul>

<h2 id="abide---check-outputs">ABIDE - Check Outputs</h2>

<p>I made a script <code>20_check_subjects.R</code> in <code>.../config/24_check</code> that checks which subject is missing some preprocessing output given that the raw data exists.</p>

<p>For two subjects, we are missing the first rest scan. These subjects are from OHSU and are <code>0050155</code> and <code>0050165</code>.</p>

<p>We need to redo <code>0051275</code> since there was a failure in calculating the nuisance regression. I ran this subject again on rocky with the relevant info/scripts in <code>/data/Projects/ABIDE_Initiative/CPAC/abide/config/26_reprocess_3mm</code>.</p>

<h2 id="abide---qc">ABIDE - QC</h2>

<p>Simply rerunning the QC resolved some broken links and the QC pages appear fine. Need to set some system of getting through all these QC pages and confirm the protocol for checking.</p>

<p><code>python
import CPAC
CPAC.utils.create_all_qc.run('/path/to/output_directory')
</code></p>

<h2 id="vmhc">VMHC</h2>

<p>Currently there is a bit of an issue when we try to run VMHC at 3mm. Although it now works, the registration appears to to be done at that resolution (3mm). Talking to Steve, it seems a fix proposed by Cameron would resolve my issue as well. That is, the registration between the regular MNI to the symmetric MNI would be done in the anatomical resolution, which is usually specified at 1mm. Then, this warp would be combined with the previous one to standard space, and we would apply this warp to the functional in order to get to the specified standard functional space, which is in 3mm.</p>

<h2 id="eigen-vector-centrality">Eigen-Vector Centrality</h2>

<p>I did a brief search of faster implementations of eigenvector centrality, which is also sometimes referred to as google’s page rank.</p>

<h3 id="paper-with-fast-implementation">Paper with Fast Implementation</h3>

<p>The most relevant item is a paper recommended by Cameron: http://online.liebertpub.com.ezproxy.med.nyu.edu/doi/full/10.1089/brain.2012.0087. It appears their analyses were done in matlab so if we could also get their code, it would be fairly easy to integrate with CPAC. Below is a quote from the paper that indicates this approach is very fast, potentially faster than degree centrality! Note that they used a voxel size of 2mm.</p>

<blockquote>
  <p>The RS-fMRI data of each subject contain 195,704 in-brain voxels per volume and the time-series length is 200. The approximate gain in efficiency compared to the standard algorithm is a factor 1000. The computation times for ECM of the fMRI (excluding file I/O) are 39 sec on average (std. dev. 14 sec) on an Intel Xeon.</p>
</blockquote>

<p>So figure out if we should contact them or not?</p>

<h3 id="related-links">Related Links</h3>

<p>The above paper used the power iteration method to calculate the dominant eigenvector. I found various links on the code to run this power iteration method.</p>

<ul>
  <li>Some slides with well explained code. http://homepages.math.uic.edu/~jan/mcs507/numpyveclinalg.pdf</li>
  <li>Easy to follow function although needs to be fixed: https://github.com/seckcoder/mmd/blob/9aba8a224c69daebc6f3f800e3847362911f2225/dimension_reduction.py</li>
  <li>Super straightforward code: http://stackoverflow.com/questions/13739186/compute-eigenvector-using-a-dominant-eigenvalue</li>
  <li>4 ways to compute: http://glowingpython.blogspot.com/2011/05/four-ways-to-compute-google-pagerank.html</li>
</ul>

<h2 id="tagging">Tagging</h2>

<p>I think I should go through and check the first 45 that I did. I believe that I may not have properly added the type of connectivity (seed-based, unsupervised, etc) properly.</p>

<p>Sent out an email with some issues/guidance on tagging.</p>
]]></content>
  </entry>
  
</feed>
