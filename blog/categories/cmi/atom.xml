<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: cmi | Zarrar's Journaling]]></title>
  <link href="http://czarrar.github.io/blog/categories/cmi/atom.xml" rel="self"/>
  <link href="http://czarrar.github.io/"/>
  <updated>2013-11-26T13:57:47-05:00</updated>
  <id>http://czarrar.github.io/</id>
  <author>
    <name><![CDATA[Zarrar Shehzad]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tuesday - Week 48]]></title>
    <link href="http://czarrar.github.io/blog/2013/11/26/tuesday-week-48/"/>
    <updated>2013-11-26T10:41:00-05:00</updated>
    <id>http://czarrar.github.io/blog/2013/11/26/tuesday-week-48</id>
    <content type="html"><![CDATA[<h2 id="plans">Plans</h2>

<ul>
  <li>Do final memory test for centrality code</li>
  <li>Create command-line centrality wrapper</li>
  <li>Finish 10mins (from yesterday) for CMI librarian tagging</li>
  <li>Get details on ABIDE preprocessing output (what completed and what didn’t)</li>
  <li>Start creating quick packs for different strategies (CPAC, Pierre, Xinian, and Chao-Gan).</li>
</ul>

<h3 id="questions">Questions</h3>

<ul>
  <li>How will quick pack work for Pierre’s data? Do we provide the identity matrix?</li>
</ul>

<h2 id="centrality">Centrality</h2>

<h3 id="memory-test">Memory Test</h3>

<p>Below are the results of running <code>./memtopX ./x_test_memprof.py</code> in <code>.../config/test_quick_pack</code>. I set a 1GB memory limit here, which led to two blocks being used. It seems further down that it came close to the this limit with 1.05GB being used.</p>

<p><code>
sorted nodes [0.0, 1.0]
threshold_option --&gt; 0
p_value -&gt; 0.266037302736
r_value --&gt;  0.0913878943802
inside optimized_centraltity, r_value -&gt; 0.0913878943802
block_size -&gt;  14236
Setup Degree Output
Normalize TimeSeries
Computing centrality across 18091 voxels
running block -&gt; 14236 0
...correlating
...calculating degree
...removing correlation matrix
running block -&gt; 18091 14236
...correlating
...calculating degree
...removing correlation matrix
timing: 32.47
</code></p>

<p>Here is the corresponding output of <code>mem.log</code> that recorded the memory usage for my script every 30 seconds.</p>

<p>File /Users/zarrar/Dropbox/Journal/octopress/source/downloads/code/cpac_centrality_memory.log could not be found</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Monday - Week 48]]></title>
    <link href="http://czarrar.github.io/blog/2013/11/25/monday-week-48/"/>
    <updated>2013-11-25T09:59:00-05:00</updated>
    <id>http://czarrar.github.io/blog/2013/11/25/monday-week-48</id>
    <content type="html"><![CDATA[<h2 id="plans">Plans</h2>

<p>Today, I planned to work on…see summary section for what actually got done.</p>

<ul>
  <li>finish memory fixes to centrality code</li>
  <li>checking on the 3mm registration of ABIDE</li>
  <li>setup quick pack for Pierre &amp; Xinian’s data</li>
  <li>setup quick pack for ABIDE data (centrality and VMHC)</li>
</ul>

<h2 id="summary">Summary</h2>

<p>I wasn’t able to get through a lot that was planned. I worked on the following (described more later):</p>

<ul>
  <li>Centrality Coding</li>
  <li>Checking paths for ABIDE preprocessing</li>
</ul>

<h2 id="centrality-code">Centrality Code</h2>

<p>I updated the centrality code with several fixes and cleaned up some of the functions. Details of this work can be found on this <a href="/blog/2013/11/25/update-centrality">other post</a>.</p>

<h2 id="qc">QC</h2>

<p>The 3mm registration is done. I want to now take a closer look at the data. I want to take a look at a few things:</p>

<ul>
  <li>Are all the outputs there? Maybe make some type of table or record of what is good with what?</li>
  <li>Can we fix up the QC pages?</li>
  <li>Do the images look good?</li>
</ul>

<p>I began to create the code to find the needed paths in the preprocessing directory. This can be found in <code>/data/Projects/ABIDE_Initiative/CPAC/abide/config/24_check/10_check_path.py</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Another Quick Pack Journey]]></title>
    <link href="http://czarrar.github.io/blog/2013/10/30/another-look-at-quick-pack-journey/"/>
    <updated>2013-10-30T15:55:00-04:00</updated>
    <id>http://czarrar.github.io/blog/2013/10/30/another-look-at-quick-pack-journey</id>
    <content type="html"><![CDATA[<p>Today, I’ve got through a few things. First, I finished compiling the <code>regressors.csv</code> file for </p>

<p>Some minor things, I helped Krishna with some ROI error he had in CPAC. It turned out that his issue was due to incorrectly binarizing the mask.</p>

<h1 id="quickpack">QuickPack</h1>

<p>Trying my hand again on quick pack today. Last time I got a bunch of different errors that I really couldn’t track. I am re-running the complete run to see what errors I get again and try to figure those out. I’m also rerunning the alff to see what happens there.</p>

<h2 id="complete-run">Complete Run</h2>

<p>This appears to be re-running smoothly (knock on wood). The last time I ran a complete (preprocessing + derivatives) run, it led to some unclear problems.</p>

<h2 id="alff-qp">ALFF QP</h2>

<p>I get the same link error as I did before. The error occurs on line 562 in <code>utils.py</code> within the <code>create_symbolic_links</code>. The line and error are</p>

<pre><code>ext = fname.split('.', 1)[1]
IndexError: list index out of range
</code></pre>

<p>Basically <code>fname</code> should be a filename but a directory is passed instead and so it fails. Specifically, it appears to be passing <code>/home2/data/Projects/ABIDE_Initiative/CPAC/test_qp/ALFF_Output/pipeline_0/0051466_session_1/functional_freq_filtered/_scan_rest_1_rest/sinker_16</code>. I don’t have much sense about what is going on with this file.</p>

<p>Other bits of information:</p>

<ul>
  <li>The crash file is located <code>/home2/data/Projects/ABIDE_Initiative/CPAC/test_qp/crash/crash-20131030-145001-milham-link_16.a0.np
z</code>.</li>
  <li>The directory in the working directory is <code>/data/Projects/ABIDE_Initiative/CPAC/test_qp/ALFF_Working/resting_preproc_0051466_session_1/_scan_rest_1_rest/link_16</code></li>
</ul>

<h3 id="steve-talk">Steve Talk</h3>

<p>I discussed this issue with Steve and it seems I will need to get down and dirty with nipype to understand the origin of this problem.</p>

<h2 id="reho-qp">REHO QP</h2>

<p>Here I got two errors. One of the errors was the same as with ALFF except instead of link<em>16 it is link</em>5. The other error is new and specific to REHO with the crash file: <code>/home2/data/Projects/ABIDE_Initiative/CPAC/test_qp/crash/crash-20131030-164123-milham-reho_map.a0.a0.npz</code>. It appears the error is an empty input filename being passed to the <code>compute_reho</code> in <code>reho/utils</code>.</p>

<p>A snapshot of the error is given below:</p>

<pre><code>/data/Projects/ABIDE_Initiative/CPAC/test_qp/Reho_Working/resting_preproc_0051466_session_1/reho_0/_scan_rest_1_rest/_scan_rest_1_rest/reho_map/&lt;string&gt; in compute_reho(in_file, mask_file, cluster_size)

/home/data/PublicProgram/epd-7.2-2-rh5-x86_64/lib/python2.7/site-packages/nibabel/loadsave.pyc in load(filename)
     37     except KeyError:
     38         raise ImageFileError('Cannot work out file type of "%s"' %
---&gt; 39                              filename)
     40     if ext in ('.nii', '.mnc', '.mgh', '.mgz'):
     41         klass = class_map[img_type]['class']

ImageFileError: Cannot work out file type of ""
Interface Function failed to run. 
</code></pre>

<p>To run the crash file, see the code below.</p>

<p>``` python
import sys
sys.path.insert(0, ‘/home2/data/Projects/CPAC_Regression_Test/nipype-installs/fcp-indi-nipype/running-install/lib/python2.7/site-packages’)
sys.path.insert(1, “/home2/data/Projects/CPAC_Regression_Test/2013-05-30_cwas/C-PAC”)
import CPAC
import CPAC.reho.utils
from nipype.utils.filemanip import loadflat</p>

<p>crashinfo = loadflat(“/home2/data/Projects/ABIDE_Initiative/CPAC/test_qp/crash/crash-20131030-164123-milham-reho_map.a0.a0.npz”)
crashinfo[‘node’].run()
```</p>

<h1 id="preprocessing-emotionalbs">Preprocessing EmotionalBS</h1>

<p>I am going to preprocess the emotionalBS data again with CPAC+ANTS. Some relevant parameters are:</p>

<ul>
  <li>Used ANTS for registration</li>
  <li>Two nuisance correction strategies
      * compcor+motion+linear+quadratic
      * compcor+global+motion+linear+quadratic</li>
  <li>Both frequency filtering (0.01-0.1 Hz) and no filtering</li>
  <li>Smoothing of 4.5mm (only for derivatives)</li>
  <li>Generated some SCA and drSCA based derivates using ROIs/maps from the ABIDE preprocessing. Otherwise no other derivatives were created.</li>
</ul>

<h2 id="install-fsl-5-for-gelert">Install FSL 5 for Gelert</h2>

<p>I was a little confused on how to install fsl 5 to a custom path (<code>/home2/data/PublicProgram</code>). It seemed to go through neurodebian and apt-get, I needed certain admin privileges that even Mike’s account didn’t have. And even if I had those, it wasn’t clear how I would install to a custom directory. Then I realized I could just copy the current fsl5 in <code>/usr/share/fsl/5.o</code> into that directory. The reason for this (<code>/home2/data/PublicProgram</code>) directory is so </p>

<h1 id="new-journal">New Journal</h1>

<p>I also worked on setting up this blog/journal with github user account. The goal is to chronicle my work efforts with particular thought on any issues I encounter. A major side benefit will be easier communication with others in the lab (e.g., was able to easily show the error for ALFF quick pack to Steve). Previously, I had been using different journal pages for each of my projects. I ended up being a big confused where to post stuff and often lost track of the markdown pages that I had created before they were published. With one journal site, this should all be easier.</p>

<p>I’m also testing out this slightly different jekyll wrapper (octopress). I unfortunately spent a lot longer (2 hours) setting it up cuz of a git error then I had wanted. So I hope some of its benefits over jekyll bootstrap such as easier syncing, simpler interface, and simpler integration of more advanced plugins, will be useful in the long run. That way I can justify my time spent installing it!</p>
]]></content>
  </entry>
  
</feed>
